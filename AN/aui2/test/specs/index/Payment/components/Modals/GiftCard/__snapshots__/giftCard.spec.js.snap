// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`index/Payment/components/Modals/GiftCard component should render correctly when error occurred. 1`] = `
<Modal
  className="new-giftCard-modal"
  onClose={[Function]}
  shown={true}
  title="Issue New Gift Certificate Refund"
>
  <div
    className="modal-body"
  >
    <Alert
      inverse={false}
      noClose={true}
      type="error"
    >
      <ul
        className="only-one-error"
      >
        <li>
          issue gift card error.
        </li>
      </ul>
    </Alert>
    <div
      className="form-group"
    >
      <div
        className="form-row aaui-flexbox"
      >
        <label
          className="form-label-col"
          htmlFor="giftCardType"
        >
          Card Type
        </label>
        <div
          className="form-entry-col"
        >
          <Dropdown
            autoOpen={false}
            data={
              Array [
                Object {
                  "amount_can_be_changed": true,
                  "amount_can_be_changed_online": true,
                  "available_for_all_sites": true,
                  "condition_of_use": "",
                  "default_amount": 30,
                  "expire_type": 0,
                  "external_number_numeric_only": false,
                  "gc_type_id": 4,
                  "gc_type_name": "gc-mask1",
                  "gift_card_number_mask": "###.###.##",
                  "hide_on_internet": true,
                  "is_external_number_enforce_mask": true,
                  "max_card_balance": 40,
                  "min_refill_amount": 10,
                  "min_sale_amount": 30,
                  "number_model": 1,
                  "prevent_further_use": false,
                  "revenue_gl_account_id": 13,
                  "text": "gc-mask1",
                  "value": 4,
                },
                Object {
                  "amount_can_be_changed": true,
                  "amount_can_be_changed_online": false,
                  "available_for_all_sites": true,
                  "condition_of_use": "",
                  "default_amount": 30,
                  "expire_type": 0,
                  "external_number_numeric_only": false,
                  "gc_type_id": 2,
                  "gc_type_name": "New gift",
                  "gift_card_number_mask": "",
                  "hide_on_internet": false,
                  "is_external_number_enforce_mask": false,
                  "max_card_balance": 30,
                  "min_refill_amount": 30,
                  "min_sale_amount": 30,
                  "number_model": 0,
                  "prevent_further_use": false,
                  "revenue_gl_account_id": 13,
                  "text": "New gift",
                  "value": 2,
                },
              ]
            }
            filterPlaceholder="Filter..."
            fuzzyQuery={false}
            id="giftCardType"
            noResult="No results found."
            onChange={[Function]}
            placeholder="Select Account type"
            showAll={true}
            showDeselectall={false}
            showTxtOnlyCheckedOneItem={true}
            theme="flat"
            txtSuffix="selected"
            value={4}
            visible={true}
          />
        </div>
      </div>
      <div
        className="form-row aaui-flexbox "
      >
        <label
          className="form-label-col"
          htmlFor="giftCardNumber"
        >
          Number
        </label>
        <div
          className="form-entry-col"
        >
          <Input
            icon={false}
            id="giftCardNumber"
            inputRef={[Function]}
            maxLength={48}
            onBlur={[Function]}
            onChange={[Function]}
            size="md"
            type="text"
            value=""
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="modal-footer"
  >
    <Button
      loading={false}
      menuData={Array []}
      noSubmit={false}
      onClick={[Function]}
      type="secondary"
    >
      Cancel
    </Button>
    <Button
      loading={false}
      menuData={Array []}
      noSubmit={false}
      onClick={[Function]}
      type="strong"
    >
      Issue
    </Button>
  </div>
</Modal>
`;

exports[`index/Payment/components/Modals/GiftCard component should render correctly when has no error occurred. 1`] = `
<Modal
  className="new-giftCard-modal"
  onClose={[Function]}
  shown={true}
  title="Issue New Gift Certificate Refund"
>
  <div
    className="modal-body"
  >
    <div
      className="form-group"
    >
      <div
        className="form-row aaui-flexbox"
      >
        <label
          className="form-label-col"
          htmlFor="giftCardType"
        >
          Card Type
        </label>
        <div
          className="form-entry-col"
        >
          <Dropdown
            autoOpen={false}
            data={
              Array [
                Object {
                  "amount_can_be_changed": true,
                  "amount_can_be_changed_online": true,
                  "available_for_all_sites": true,
                  "condition_of_use": "",
                  "default_amount": 30,
                  "expire_type": 0,
                  "external_number_numeric_only": false,
                  "gc_type_id": 4,
                  "gc_type_name": "gc-mask1",
                  "gift_card_number_mask": "###.###.##",
                  "hide_on_internet": true,
                  "is_external_number_enforce_mask": true,
                  "max_card_balance": 40,
                  "min_refill_amount": 10,
                  "min_sale_amount": 30,
                  "number_model": 1,
                  "prevent_further_use": false,
                  "revenue_gl_account_id": 13,
                  "text": "gc-mask1",
                  "value": 4,
                },
                Object {
                  "amount_can_be_changed": true,
                  "amount_can_be_changed_online": false,
                  "available_for_all_sites": true,
                  "condition_of_use": "",
                  "default_amount": 30,
                  "expire_type": 0,
                  "external_number_numeric_only": false,
                  "gc_type_id": 2,
                  "gc_type_name": "New gift",
                  "gift_card_number_mask": "",
                  "hide_on_internet": false,
                  "is_external_number_enforce_mask": false,
                  "max_card_balance": 30,
                  "min_refill_amount": 30,
                  "min_sale_amount": 30,
                  "number_model": 0,
                  "prevent_further_use": false,
                  "revenue_gl_account_id": 13,
                  "text": "New gift",
                  "value": 2,
                },
              ]
            }
            filterPlaceholder="Filter..."
            fuzzyQuery={false}
            id="giftCardType"
            noResult="No results found."
            onChange={[Function]}
            placeholder="Select Account type"
            showAll={true}
            showDeselectall={false}
            showTxtOnlyCheckedOneItem={true}
            theme="flat"
            txtSuffix="selected"
            value={4}
            visible={true}
          />
        </div>
      </div>
      <div
        className="form-row aaui-flexbox "
      >
        <label
          className="form-label-col"
          htmlFor="giftCardNumber"
        >
          Number
        </label>
        <div
          className="form-entry-col"
        >
          <Input
            icon={false}
            id="giftCardNumber"
            inputRef={[Function]}
            maxLength={48}
            onBlur={[Function]}
            onChange={[Function]}
            size="md"
            type="text"
            value=""
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="modal-footer"
  >
    <Button
      loading={false}
      menuData={Array []}
      noSubmit={false}
      onClick={[Function]}
      type="secondary"
    >
      Cancel
    </Button>
    <Button
      loading={false}
      menuData={Array []}
      noSubmit={false}
      onClick={[Function]}
      type="strong"
    >
      Issue
    </Button>
  </div>
</Modal>
`;
